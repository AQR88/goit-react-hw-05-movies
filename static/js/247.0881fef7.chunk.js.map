{"version":3,"file":"static/js/247.0881fef7.chunk.js","mappings":"oLAEA,MAuCA,EAvCaA,KACX,MAGMC,GAAYC,EAAAA,EAAAA,KAClB,OAAKD,EAAUE,SAAwC,IAA7BF,EAAUE,QAAQC,QAM1CC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,UAAW,SAAUC,eAAgB,aAAcJ,SAAC,gBAGjEC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEG,QAAS,OAAQC,IAAK,OAAQC,SAAU,QAASP,SAC3DN,EAAUE,QAAQY,KACjBC,IAAA,IAAC,SAAEC,EAAQ,aAAEC,EAAY,cAAEC,EAAa,UAAEC,GAAWJ,EAAA,OACnDX,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEC,MAAO,CAAEY,aAAc,MAAOC,OAAQ,aACtCC,IACEL,EAAY,mCAAAM,OAC2BN,GArBrD,mEAwBYO,IAAKN,EACLO,MAAO,OAETlB,EAAAA,EAAAA,KAAA,MAAAD,SAAKY,KACLd,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,cAAYa,OAZRH,EAaJ,UAxBXT,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAAEC,UAAW,UAAWH,SAAC,4CA4BlC,C,gECjCA,MAAML,EAAoBA,KAC/B,MAAOC,EAASwB,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IACjC,QAAEK,IAAYC,EAAAA,EAAAA,MAkBpB,OAhBAC,EAAAA,EAAAA,YAAU,KAER,GADAH,GAAW,IACNC,EAAS,OACSG,WACrB,IACE,MAAMC,QAAaC,EAAAA,EAAAA,cAAaL,GAChCN,EAAWU,EAAKE,KAKlB,CAJE,MAAOV,GACPC,EAAS,mCACX,CAAC,QACCE,GAAW,EACb,GAEFQ,EAAgB,GACf,CAACP,IAEG,CAAE9B,UAAS0B,QAAOE,UAAS,C,0JCxBpC,MAAMU,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,MAAMC,EAAmBP,UAC9B,IAEE,aADmBM,EAAAA,EAAAA,GAAM,6BAADlB,OAA8BiB,GAIxD,CAFE,MAAOZ,GACP,MAAMA,CACR,GAGWe,EAAkBR,UAC7B,IAIE,aAHmBM,EAAAA,EAAAA,GAAM,yBAADlB,OACGiB,EAAO,WAAAjB,OAAUqB,EAAK,wBAKnD,CAFE,MAAOhB,GACP,MAAMA,CACR,GAGWiB,EAAmBV,UAC9B,IACE,MAAM,KAAEC,SAAeK,EAAAA,EAAAA,IAAU,UAADlB,OAAWS,EAAO,aAAAT,OAAYiB,IAC9D,OAAOJ,CAGT,CAFE,MAAOR,GACP,MAAMA,CACR,GAGWS,EAAeF,UAC1B,IACE,MAAM,KAAEC,SAAeK,EAAAA,EAAAA,GAAM,UAADlB,OAChBS,EAAO,qBAAAT,OAAoBiB,IAEvC,OAAOJ,CAGT,CAFE,MAAOR,GACP,MAAMA,CACR,GAGWkB,EAAkBX,UAC7B,IAEE,aADmBM,EAAAA,EAAAA,GAAM,UAADlB,OAAWS,EAAO,qBAAAT,OAAoBiB,GAIhE,CAFE,MAAOZ,GACP,MAAMA,CACR,E","sources":["components/Cast/Cast.jsx","hooks/useFetchMovieCast.js","services/movie-service.js"],"sourcesContent":["import { useFetchMovieCast } from 'hooks/useFetchMovieCast';\n\nconst Cast = () => {\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image';\n\n  const movieCast = useFetchMovieCast();\n  if (!movieCast.credits || movieCast.credits.length === 0) {\n    return (\n      <p style={{ textAlign: 'center' }}>There is no information yetðŸ™„ </p>\n    );\n  }\n  return (\n    <>\n      <h3 style={{ textAlign: 'center', textDecoration: 'underline' }}>\n        Movie cast\n      </h3>\n      <ul style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n        {movieCast.credits.map(\n          ({ movie_id, profile_path, original_name, character }) => (\n            <li key={movie_id}>\n              <img\n                style={{ borderRadius: '4px', border: 'red , 2px' }}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : defaultImg\n                }\n                alt={original_name}\n                width={250}\n              />\n              <h3>{original_name}</h3>\n              <p>Character: {character}</p>\n            </li>\n          )\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/movie-service';\n\nexport const useFetchMovieCast = () => {\n  const [credits, setCredits] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    if (!movieId) return;\n    const fetchMovieCast = async () => {\n      try {\n        const data = await getMovieCast(movieId);\n        setCredits(data.cast);\n      } catch (error) {\n        setError('Something went wrongðŸ™„');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return { credits, error, loading };\n};\n","import axios from 'axios';\n\nconst API_KEY = '8ce1621260b74e6098b536a0b1ea63ad';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getAllMoviesList = async () => {\n  try {\n    const data = await axios(`/trending/all/day?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const data = await axios(\n      `/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieFullInfo = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const { data } = await axios(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const data = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["Cast","movieCast","useFetchMovieCast","credits","length","_jsxs","_Fragment","children","_jsx","style","textAlign","textDecoration","display","gap","flexWrap","map","_ref","movie_id","profile_path","original_name","character","borderRadius","border","src","concat","alt","width","setCredits","useState","error","setError","loading","setLoading","movieId","useParams","useEffect","async","data","getMovieCast","cast","fetchMovieCast","API_KEY","axios","getAllMoviesList","getMovieByQuery","query","getMovieFullInfo","getMovieReviews"],"sourceRoot":""}